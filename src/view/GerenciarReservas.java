package view;

import dao.ReservaDAO;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Reserva;

/**
 *
 * @author Luiz Alberto Teodoro de Arruda
 */
public class GerenciarReservas extends javax.swing.JFrame {

    private final int DATA = 0;
    private final int HORA = 1;
    private final int CLIENTE = 2;
    private final int SERVICO = 3;
    private final int FUNCIONARIO = 4;

    private ArrayList<Reserva> reservas;
    private DefaultTableModel table;
    private boolean subList;
    private int position;

    /**
     * Creates new form VerificarReserva
     */
    public GerenciarReservas() {
        initComponents();
        reservas = new ReservaDAO().queryAll();
        subList = false;
        position = -1;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlReservas = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblProcurar = new javax.swing.JLabel();
        txtProcurar = new javax.swing.JTextField();
        bttProcurar = new javax.swing.JButton();
        lblReservas = new javax.swing.JLabel();
        scrReservas = new javax.swing.JScrollPane();
        tblReservas = new javax.swing.JTable();
        bttCadastrar = new javax.swing.JButton();
        bttEditar = new javax.swing.JButton();
        bttExcluir = new javax.swing.JButton();
        bttVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlReservas.setBackground(new java.awt.Color(255, 255, 255));
        pnlReservas.setName("excluir"); // NOI18N
        pnlReservas.setPreferredSize(new java.awt.Dimension(400, 512));

        lblTitulo.setBackground(new java.awt.Color(102, 0, 153));
        lblTitulo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Gerenciar Reservas");
        lblTitulo.setOpaque(true);

        lblProcurar.setForeground(new java.awt.Color(102, 0, 153));
        lblProcurar.setText("Procurar reserva:");

        txtProcurar.setEnabled(false);

        bttProcurar.setBackground(new java.awt.Color(102, 0, 153));
        bttProcurar.setForeground(new java.awt.Color(255, 255, 255));
        bttProcurar.setText("Buscar");
        bttProcurar.setEnabled(false);
        bttProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttProcurarActionPerformed(evt);
            }
        });

        lblReservas.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblReservas.setForeground(new java.awt.Color(102, 0, 153));
        lblReservas.setText("Horários reservados:");

        tblReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Data", "Hora", "Cliente", "Serviço", "Funcionário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblReservas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblReservasMouseClicked(evt);
            }
        });
        scrReservas.setViewportView(tblReservas);

        bttCadastrar.setBackground(new java.awt.Color(102, 0, 153));
        bttCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        bttCadastrar.setText("Cadastrar");
        bttCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttCadastrarActionPerformed(evt);
            }
        });

        bttEditar.setBackground(new java.awt.Color(102, 0, 153));
        bttEditar.setForeground(new java.awt.Color(255, 255, 255));
        bttEditar.setText("Editar");
        bttEditar.setEnabled(false);
        bttEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttEditarActionPerformed(evt);
            }
        });

        bttExcluir.setBackground(new java.awt.Color(102, 0, 153));
        bttExcluir.setForeground(new java.awt.Color(255, 255, 255));
        bttExcluir.setText("Excluir");
        bttExcluir.setEnabled(false);
        bttExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttExcluirActionPerformed(evt);
            }
        });

        bttVoltar.setBackground(new java.awt.Color(255, 255, 255));
        bttVoltar.setForeground(new java.awt.Color(102, 0, 153));
        bttVoltar.setText("Voltar");
        bttVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlReservasLayout = new javax.swing.GroupLayout(pnlReservas);
        pnlReservas.setLayout(pnlReservasLayout);
        pnlReservasLayout.setHorizontalGroup(
            pnlReservasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReservasLayout.createSequentialGroup()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pnlReservasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReservasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlReservasLayout.createSequentialGroup()
                        .addComponent(txtProcurar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bttProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblProcurar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblReservas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrReservas, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pnlReservasLayout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(pnlReservasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlReservasLayout.createSequentialGroup()
                        .addComponent(bttVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bttExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlReservasLayout.createSequentialGroup()
                        .addComponent(bttCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bttEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlReservasLayout.setVerticalGroup(
            pnlReservasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReservasLayout.createSequentialGroup()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblProcurar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlReservasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblReservas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrReservas, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlReservasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttCadastrar)
                    .addComponent(bttEditar))
                .addGap(18, 18, 18)
                .addGroup(pnlReservasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttVoltar)
                    .addComponent(bttExcluir))
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlReservas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 512, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlReservas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttCadastrarActionPerformed
        ManipularReserva cadastro = new ManipularReserva();
        cadastro.show();
        cadastro.inflateTable();

        cadastro.bttSalvar.addActionListener((ActionEvent e) -> {
            if (cadastro.boxCliente.getSelectedIndex() != 0
                    || cadastro.boxServico.getSelectedIndex() != 0
                    || cadastro.boxFuncionario.getSelectedIndex() != 0) {

                Reserva reserva = new Reserva(
                        cadastro.choData.getText() + " " + cadastro.lstHorario.getSelectedValue() + ":00",
                        cadastro.servicos.get(cadastro.boxServico.getSelectedIndex() - 1).getId(),
                        cadastro.funcionarios.get(cadastro.boxFuncionario.getSelectedIndex() - 1).getId(),
                        cadastro.clientes.get(cadastro.boxCliente.getSelectedIndex() - 1).getId()
                );
                
                ReservaDAO dao = new ReservaDAO();
                reserva.setId(dao.insert(reserva));
                reservas.add(reserva);
                Object[] strings = dao.queryStringsForId(reserva.getId());
                table.addRow(strings);

                cadastro.dispose();

            } else {
                JOptionPane.showMessageDialog(cadastro,
                        "Contém campos não selecionados",
                        "Impossível finalizar o cadastro!",
                        JOptionPane.ERROR_MESSAGE);
            }
        });
    }//GEN-LAST:event_bttCadastrarActionPerformed

    private void bttEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttEditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bttEditarActionPerformed

    private void bttExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttExcluirActionPerformed
        String msg = "Reserva: " + table.getValueAt(position, DATA) + " - "
                + table.getValueAt(position, HORA)
                + "\nCliente: " + table.getValueAt(position, CLIENTE)
                + "\n\nVocê está prestes a excluir essa reserva."
                + "\nDeseja mesmo excluí-la?";

        int res = JOptionPane.showConfirmDialog(
                rootPane, msg, "Excluindo reserva",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (res == JOptionPane.YES_OPTION) {
            ReservaDAO dao = new ReservaDAO();
            dao.delete(reservas.remove(position));
            table.removeRow(position);
            bttEditar.setEnabled(false);
            bttExcluir.setEnabled(false);
        }
    }//GEN-LAST:event_bttExcluirActionPerformed

    private void bttProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttProcurarActionPerformed
        /*if (txtProcurar.getText().trim().isEmpty()) {
            if (subList) {
                ReservaDAO dao = new ReservaDAO();
                reservas = dao.queryAll();
                inflateTable();
                subList = false;
            }
            txtProcurar.setText("");

        } else {
            ReservaDAO dao = new ReservaDAO();
            reservas = dao.queryForString(txtProcurar.getText());
            inflateTable();
            subList = true;
        }*/
    }//GEN-LAST:event_bttProcurarActionPerformed

    private void tblReservasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblReservasMouseClicked
        position = tblReservas.getSelectedRow();

        if (position != -1) {
            bttEditar.setEnabled(true);
            bttExcluir.setEnabled(true);
        } else {
            bttEditar.setEnabled(false);
            bttExcluir.setEnabled(false);
        }
    }//GEN-LAST:event_tblReservasMouseClicked

    private void bttVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_bttVoltarActionPerformed

    protected void inflateTable() {
        String col[] = {
            "Data", "Horário", "Cliente", "Serviço", "Funcionário"
        };
        table = new DefaultTableModel(col, 0) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int row, int column) {
                //return super.isCellEditable(row, column);
                return canEdit[column];
            }
        };
        tblReservas.setModel(table);

        ReservaDAO dao = new ReservaDAO();
        reservas.forEach((reserva) -> {
            Object[] strings = dao.queryStringsForId(reserva.getId());
            table.addRow(strings);
        });

        bttEditar.setEnabled(false);
        bttExcluir.setEnabled(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GerenciarReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GerenciarReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GerenciarReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GerenciarReservas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GerenciarReservas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttCadastrar;
    private javax.swing.JButton bttEditar;
    private javax.swing.JButton bttExcluir;
    private javax.swing.JButton bttProcurar;
    private javax.swing.JButton bttVoltar;
    private javax.swing.JLabel lblProcurar;
    private javax.swing.JLabel lblReservas;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlReservas;
    private javax.swing.JScrollPane scrReservas;
    private javax.swing.JTable tblReservas;
    private javax.swing.JTextField txtProcurar;
    // End of variables declaration//GEN-END:variables
}
